// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/umsdk/release' }


    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'

        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    compileSdkVersion = 27
    buildToolsVersion = "27.0.0"
    minSdkVersion = 16
    targetSdkVersion = 21

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    supportVersion = "27.1.0"
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/umsdk/release' }
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//block module。
subprojects(){

    // assembleReleaseassembleDebugtask
    //tasks.getByName("assembleRelease")，task
    def releaseTasks = project.getTasksByName("assembleRelease",false)
    def debugTasks = project.getTasksByName("assembleDebug",false)
    copyApkFile(releaseTasks, project)
    copyApkFile(debugTasks, project)
}

def copyApkFile(Set<Task> tasks , Project project) {
    for (task in tasks) {
        def dir = project.getProjectDir().getAbsolutePath()
        println "assemble release dir = $dir"
        def file = new File(dir + "/build/outputs/apk")

        //apk，apk
        if (file.exists()) {
            def var = delete(dir + "/build/outputs/apk")
            def var1 = delete(rootProject.getRootDir().getAbsolutePath() + "/outputs/" + project.getName())
            println "clear before create $var , $var1------------------"
        }

        task.doLast {
            if (file.exists()) {
                //apk
                copy{ //copygradleproject，，
                    //from srcDir ， into desDir （）
                    println "copy file -------------------"
                    from dir + "/build/outputs/apk"
                    into rootProject.getRootDir().getAbsolutePath() + "/outputs/" + project.getName()
                }
            }
        }
    }
}
